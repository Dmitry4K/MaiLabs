(defun matrix-tl-bl (n)

	(let ((matrix (make-array  (list N N))))
	(do ((i 0 (+ i 1))
		 (c 0 (+ c (if (< i n) (+ 1 i) (- (* 2 n) i 1))))
		)
		((>= i (- (* 2 n) 1)))
		(if (< i n) 
			(do ((j 0 (+ j 1)))
				((> j i))
				(if (= (rem i 2) 0)
					(setf (aref matrix (- i j) j) (+ c j 1))
					(setf (aref matrix j (- i j)) (+ c j 1))
				)
			)
			(do ((j 0 (+ j 1)))
				((>= j (- (- (* 2 n) i) 1)))
				(if (= (rem i 2) 0)
					(setf (aref matrix (- (- n 1) j) (+ (+ (- i n) j) 1)) (+ c j 1))
					(setf (aref matrix (+ (+ (- i n) j) 1) (- (- n 1) j)) (+ c j 1))
				)
			)
		)
	)
	matrix
	)
)